---
apiVersion: v1
kind: DeploymentConfig
metadata:
  annotations:
    kompose.volume.type: persistentVolumeClaim
  creationTimestamp: null
  labels:
    io.kompose.service: db
  name: db
spec:
  replicas: 1
  selector:
    io.kompose.service: db
  strategy:
    resources: {}
    type: Recreate
  template:
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.network/multiple-type-volumes-default: "true"
        io.kompose.service: db
    spec:
      containers:
        - image: ' '
          name: db
          resources: {}
          volumeMounts:
            - mountPath: /var/lib/mysql
              name: db-data
      restartPolicy: Always
      volumes:
        - name: db-data
          persistentVolumeClaim:
            claimName: db-data
  test: false
  triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
          - db
        from:
          kind: ImageStreamTag
          name: db:latest
      type: ImageChange
status:
  availableReplicas: 0
  latestVersion: 0
  observedGeneration: 0
  replicas: 0
  unavailableReplicas: 0
  updatedReplicas: 0

---
apiVersion: v1
kind: ImageStream
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: db
  name: db
spec:
  lookupPolicy:
    local: false
  tags:
    - annotations: null
      from:
        kind: DockerImage
        name: mysql
      generation: null
      importPolicy: {}
      name: latest
      referencePolicy:
        type: ""
status:
  dockerImageRepository: ""

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: db-data
  name: db-data
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
status: {}

---
apiVersion: v1
kind: DeploymentConfig
metadata:
  annotations:
    kompose.volume.type: configMap
  creationTimestamp: null
  labels:
    io.kompose.service: web
  name: web
spec:
  replicas: 1
  selector:
    io.kompose.service: web
  strategy:
    resources: {}
    type: Recreate
  template:
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.network/multiple-type-volumes-default: "true"
        io.kompose.service: web
    spec:
      containers:
        - image: ' '
          name: web
          resources: {}
          volumeMounts:
            - mountPath: /etc/tls
              name: web-cm0
            - mountPath: /etc/test-a-key.key
              name: web-cm1
              subPath: test-a-key.key
      restartPolicy: Always
      volumes:
        - configMap:
            name: web-cm0
          name: web-cm0
        - configMap:
            items:
              - key: a.key
                path: test-a-key.key
            name: web-cm1
          name: web-cm1
  test: false
  triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
          - web
        from:
          kind: ImageStreamTag
          name: web:latest
      type: ImageChange
status:
  availableReplicas: 0
  latestVersion: 0
  observedGeneration: 0
  replicas: 0
  unavailableReplicas: 0
  updatedReplicas: 0

---
apiVersion: v1
kind: ImageStream
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: web
  name: web
spec:
  lookupPolicy:
    local: false
  tags:
    - annotations: null
      from:
        kind: DockerImage
        name: nginx
      generation: null
      importPolicy: {}
      name: latest
      referencePolicy:
        type: ""
status:
  dockerImageRepository: ""

---
apiVersion: v1
data:
  a.crt: test-crt-data...
  a.key: test-key-data....
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: web
  name: web-cm0

---
apiVersion: v1
data:
  a.key: test-key-data....
kind: ConfigMap
metadata:
  annotations:
    use-subpath: "true"
  creationTimestamp: null
  labels:
    io.kompose.service: web
  name: web-cm1

