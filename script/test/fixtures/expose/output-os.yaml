---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: redis
  name: redis
spec:
  ports:
    - name: "6379"
      port: 6379
      targetPort: 6379
  selector:
    io.kompose.service: redis
status:
  loadBalancer: {}

---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.service.expose: batman.example.com/dev,batwoman.example.com
    kompose.service.expose.ingress-class-name: nginx
    kompose.service.expose.tls-secret: test-secret
  creationTimestamp: null
  labels:
    io.kompose.service: web
  name: web
spec:
  ports:
    - name: "5000"
      port: 5000
      targetPort: 5000
  selector:
    io.kompose.service: web
status:
  loadBalancer: {}

---
apiVersion: v1
kind: DeploymentConfig
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: redis
  name: redis
spec:
  replicas: 1
  selector:
    io.kompose.service: redis
  strategy:
    resources: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.network/expose-default: "true"
        io.kompose.service: redis
    spec:
      containers:
        - image: ' '
          name: redis
          ports:
            - containerPort: 6379
          resources: {}
      restartPolicy: Always
  test: false
  triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
          - redis
        from:
          kind: ImageStreamTag
          name: redis:3.0
      type: ImageChange
status:
  availableReplicas: 0
  latestVersion: 0
  observedGeneration: 0
  replicas: 0
  unavailableReplicas: 0
  updatedReplicas: 0

---
apiVersion: v1
kind: ImageStream
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: redis
  name: redis
spec:
  lookupPolicy:
    local: false
  tags:
    - annotations: null
      from:
        kind: DockerImage
        name: redis:3.0
      generation: null
      importPolicy: {}
      name: "3.0"
      referencePolicy:
        type: ""
status:
  dockerImageRepository: ""

---
apiVersion: v1
kind: DeploymentConfig
metadata:
  annotations:
    kompose.service.expose: batman.example.com/dev,batwoman.example.com
    kompose.service.expose.ingress-class-name: nginx
    kompose.service.expose.tls-secret: test-secret
  creationTimestamp: null
  labels:
    io.kompose.service: web
  name: web
spec:
  replicas: 1
  selector:
    io.kompose.service: web
  strategy:
    resources: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.network/expose-default: "true"
        io.kompose.service: web
    spec:
      containers:
        - image: ' '
          name: web
          ports:
            - containerPort: 5000
          resources: {}
      restartPolicy: Always
  test: false
  triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
          - web
        from:
          kind: ImageStreamTag
          name: web:latest
      type: ImageChange
status:
  availableReplicas: 0
  latestVersion: 0
  observedGeneration: 0
  replicas: 0
  unavailableReplicas: 0
  updatedReplicas: 0

---
apiVersion: v1
kind: ImageStream
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: web
  name: web
spec:
  lookupPolicy:
    local: false
  tags:
    - annotations: null
      from:
        kind: DockerImage
        name: tuna/docker-counter23
      generation: null
      importPolicy: {}
      name: latest
      referencePolicy:
        type: ""
status:
  dockerImageRepository: ""

---
apiVersion: v1
kind: Route
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: web
  name: web
spec:
  host: batman.example.com/dev,batwoman.example.com
  port:
    targetPort: 5000
  to:
    kind: Service
    name: web
    weight: null
status:
  ingress: null

